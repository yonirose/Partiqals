# -*- coding: utf-8 -*-
"""
Created on Tue Feb  7 08:44:17 2017

@author: jrosenfe
v1
"""

phy_units = dict(voltage=['V'],
                 current=['A'],
                 power=['W'],
                 energy=['J'],
                 charge=['C'],
                 capac=['F'],
                 induc=['H'],
                 imp=['Ω'],
                 adm=['℧'],
                 length=['mm', 'ft', 'mils', '"'],
                 velocity=['m/sec', 'mm/sec', 'mm/min', 'km/hr', 'mph'],
                 area = ['m2', 'ft2', '"2'],
                 volume = ['m3', 'ft3', '"3'],                
                 elec_field=['V/m'],
                 mag_field=['A/m'],
                 mag_flux = ['Wb', 'T'],
                 temp=['°C', '°F', '°K'],
                 temp_coeff=['V/°C', 'ppm/°C', 'V/°F', 'ppm/°F'],
                 thermal_resist=['°C/W', '°F/W', '°K/W'],
                 transcond=['S'],
                 _time=['sec', 'min', 'hr'],
                 freq=['Hz'],
                 dB= ['dBc', 'dBi', 'dBm', 'dB', 'dBV', 'dBA'],
                 ppm=['ppm'],
                 weight=['g', 'Kg', 'lb', 'pound'],
                 digital=['B', 'G', 'byte', 'bit', 'bps', 'flops', 'LSB/V'],
                 pressure=['Pa', 'N/m2', 'psi'],
                 copper_thick=['oz', 'Oz'],
                 perc_per = ['%/°C', '%/°F', '%/V', '%/A'],
                 one_over = ['1/°C', '1/°F', '1/V', '1/A'],
                 force = ['N'])

unit_term = {'voltage': ['voltage', 'potential', 'VDD', 'VCC', 'VSS', 'VDSS'],
             'current': ['current', 'amperage'],
             'energy': ['energy', 'heat'],
             'power': ['power', 'wattage'],
             'charge': ['charge'],
             'capac': ['capacitance', 'caps', 'cap', 'cap.', 'capacitor', 'capacitors'],
             'induc': ['inductance', 'inductor'],
             'imp': ['resistance', 'impednace', 'resistor', 'res.'],
             'adm': ['admittance'],
             'length': ['size', 'thickness', 'length', 'width', 'height'],
             'velocity': ['velocity', 'speed'],
             'area': ['area'],
             'volume': ['volumetric', 'volume'],
             'elec_field': ['electric', 'electricity'],
             'mag_field': ['magnetic', 'magnet'],
             'temp': ['temp', 'temp.', 'temperature'],
             'temp_coeff': ['coeff', 'coeff.', 'coefficient'],
             'thermal_resist': ['thermal'],
             'transcond': ['transcond', 'transconductance'],
             '_time': ['time', 'endurance'],
             'freq': ['freq', 'freq.', 'frequency'],
             'dB': ['decibels', 'decibel', 'logarithmic', 'GPS', 'gain'],
             'ppm': ['ppm', 'parts', 'per', 'million'],
             'weight': ['weight', 'mass'],
             'digital': ['digitized', 'digital', 'analog'],
             'pressure': ['pressure'],
             'copper_thick': ['thickness', 'copper'],
             'perc': ['percent', 'percentile']}

# Update self.symb_pat in parse_line.py
unit_replace = {'V': ['Volts', 'Volt', 'Vdc', 'Vac', 'V.dc', 'Vpp'],
                'A': ['Amperes', 'Ampere', 'Amper', 'Amps', 'Amp',
                      'Adc', 'Aac', 'A.dc', 'App'],
                'J': ['Joules', 'Joule'],
                'W': ['Watts', 'Watt'],
                'C': ['Coulombs','Coulomb'],
                'Ω': ['Ohms', 'Ohm'],
                '℧': ['Mhos', 'Mho'],
                'mΩ': ['milliOhms', 'milliOhm'],
                'T': ['Teslas', 'Tesla'],
                'Wb': ['Webers', 'Weber'],
                'um': ['Microns', 'Micrometers', 'Micron', 'Micrometer', 'Micro'],
                'mm': ['Millimeters', 'Millimeter','Mm'],
                'cm': ['Centimeters', 'Centimeter', 'Centimetre'],
                'm ': ['Meters', 'Meter', 'M'],
                'km': ['Kilometers', 'Kilometer'],
                'ft': ['Feet', 'Foot'],
                '"': ['Inches', 'Inch', "''"],
                '°C': ['oC', 'deg', 'deg-C', 'Celsius', 'C deg'],
                '°F': ['oF!', 'deg-F', 'Fahrenheit'], # ! indicates to use the unit as is without any change
                '°K': ['oK', 'deg-K', 'Kelvin', 'K'],
                'V/°C': ['V/C', 'V/oC'],
                'V/°F': ['V/F', 'V/oF'],
                'ppm/°C': ['ppm/C', 'ppm/oC'],
                'ppm/°F': ['ppm/F', 'ppm/oF'],
                '°C/W': ['C/w', 'oC/W'],
                '°F/W': ['F/w', 'oF/W'],
                '°K/W': ['K/w', 'oK/W'],
                '%/°C': ['%/C', '%/oC'],
                'S': ['Sm', 'Siemens'],
                'sec': ['Seconds', 'Second', 'Secs', 's!'],
                'msec': ['millisec', 'millisecs'],
                'usec': ['microsec', 'microsecs'],
                'min': ['Minutes', 'Minute'],
                'hr': ['Hours', 'Hour', 'hrs'],
                'Hz': ['Hertz'],
                'dB': ['Decibels', 'Decibel'],
                'mg': ['Milligrams', 'Milligram'],
                'g': ['Grams', 'Gram', 'Gr', 'Grm'],
                'kg': ['Kilograms', 'Kilogram'],
                'bit': ['Bits', 'Bit'],
                'byte': ['Bytes', 'Byte'],
                'N': ['Newton'],
                'Pa': ['Pascal', 'Psi'],
                'lb': ['Lb', 'Lbs.', 'Lbs', 'Pound'],
                '-': ['--', '–'],
                '': ['[', ']', '(', ')', ' on ', ' of ', ' and ', ' but ',
                     ' with ', ' or ', ' yet ', ' so ', ' for ', ' nor ',
                     ' as ', ' although ', ' once ', ' since ', ' due ',
                     ' until ', ' while ', ' wether ', ' when ', ' until ',
                     ' unless ', ' what ', ' before ', ' as long as ',
                     ' because ', ' the ', ' The ', ' an ', ' from ', ',',
                     ' up '],
                '**': ['^'],
                '**2': ['²'],
                '**3': ['³'],
                'inf': ['ꝏ'],
                '°': ['º', '˚']
                # 'MΩ': ['megohm', 'MegOhm', 'Megohm', 'megΩ']
                }

package_codes = ['0201', '03015', '0603', '1005', '1608', '2012', '2520',
                 '3216', '3225', '3528', '008004', '01005', '0805', '1008',
                 '1206', '1210', '1411', '4512', '4516', '4520', '4532',
                 '4564', '5025', '5650', '5664', '6332', '6032', '7343',
                 '1805', '1806', '1808', '1812', '1825', '2010', '2220',
                 '2225', '2512', '2512', '3216', '3812', '3528', '3825',
                 '5012', '5025', '5634', '6032', '6728', '7338',
                 '0510', '0816', '1220', '1632', '2037', '2075',
                 '2550', '3245', '3264', '5176', '0306', '0508', '0612',
                 '0815', '0830', '1020', '1218', '1225', '2030',
                 '7689', '8484', '8976', '3035', '3333', '3530',
                 '3640', '3940', '4045', '4552', '4540', '5550', '5780',
                 '5868', '6560', '7680', '7875', '8840', '1610', '2012',
                 '3216', '3514', '3516', '3520', '5025', '5922', '8530',
                 '10540', '0604', '1406', '1408', '2308', '3512', '4213',
                 '0102', '0204', '0207', '201', '301', '2920'
                 ]